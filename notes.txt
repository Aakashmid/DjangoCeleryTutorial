

// for running celery worker
    celery -A your_project_name worker --loglevel=info

    celery -A celeryproject worker --loglevel=info



----------------------------------------------------

##### Windows does not support celery 4.0+, So To Solve this issue(for running celery worker in Windows ) :-

        We have to install gevent using pip :-

        - pip install gevent

        Then to run celery,

        - celery -A <proj_name> worker -l info -P gevent


#### For using django database as a result backend 


        Install the https://pypi.org/project/django-celery-results/ library:

        - pip install django-celery-results


        Add django_celery_results to INSTALLED_APPS in your Django project’s settings.py:

        "
        INSTALLED_APPS = (
            ...,
            'django_celery_results',
        )
        "


        Note that there is no dash in the module name, only underscores.
        // migrate database
        -  python manage.py migrate django_celery_results


        Assuming you are using Django’s settings.py to also configure Celery, add the following settings:

        CELERY_RESULT_BACKEND = 'django-db'



//// For runnig periodic tasks

#   Method 1


#settings.py
CELERY_BEAT_SCHEDULE = {
    'clearCache': { # task name 
        'task': 'myapp.tasks.schedule_task',  
        'schedule': 10,  # run in every 10 second 
        'args':(12121, )
    },

    # add more periodic tasks
}


# Methode 2 for schedule tasks 
#celery.py
app.conf.beat_schedule = {
    # Executes every Monday morning at 7:30 a.m.
    'schedule_task1': {
        'task': 'myapp.tasks.schedule_task',
        'schedule': timedelta(seconds=10),   # run in every 10 seconds
        # 'schedule': crontab(hour=7, minute=30, day_of_week=1),   # run at monday 7:30
        'args': (23,)
    },
}


run this command to run celery beat server 
 
- celery -A celeryproject beat -l info



------------------User guide link ----------------------
https://docs.celeryq.dev/en/stable/userguide/index.html#guide

https://docs.celeryq.dev/en/stable/userguide/periodic-tasks.html#beat-custom-schedulers  // for django-celery-beat
----------------------------------------




______________'django-celery-beat' package use __________________

#schedule task using django-celery-beat (django adminsite)

    - pip install django-celery-beat


    INSTALLED_APPS = (
    ...,
    'django_celery_beat',
    )

    - python manage.py migrate

    #settins.py
    CELERY_BEAT_SCHEDULER='django_celery_beat.schedulers:DatabaseScheduler'  # SET SCHEDULER

    //then  after that run celery  beat 

    '''We can do above thing without admin site also (  by using manual coding , search for that if want to do that way)'''